install_github('ramnathv/rCharts')
library("Rcpp")
library("devtools")
install_github('ramnathv/rCharts')
library("swirl")
install.packages("swirl")
library(swirl)
library(swirl)
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c
c(z,555,z)
z*2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
info()
c(1,2,3,4)+c(0,10,1000)
info()
nxt()
main()
main()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args()
args(list.files())
args(list.files)
old.dir<-getwd()
dir.create(testdir)
args(dir.create)
dir.create(C:/Users/dell/Documents/testdir)
dir.create("C:/Users/dell/Documents/testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink(testdir2, recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwk(old.dir)
setwd(old.dir)
unlink("testdir", recursive=T)
unlink("testdir", recursive = TRUE)
nxt()
nxt()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt<-dqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 100
c(1, 2, 3, 4) + c(0, 10, 1000)
z*2 + 1000
my_div
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect<-c(0.5,55,-10,6)
num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
my-name<-c(my_char, "Claire")
my_name<-c(my_char, "Claire")
my_name
past(my_name,collapse="")
paste(my_name,collapse="")
paste(my_name,collapse=" ")
Try paste("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(iris)
qplot(Sepal.Length, Petal.Length, data = iris)
?qplot
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species, size = Petal.Width)
qplot(Sepal.Length, Petal.Length, data = iris, geom = "line", color = Species)
data(Orange)
qplot(age, circumference, data = Orange, geom = "line", colour = Tree)
qplot(age, circumference, data = Orange, geom = "line")
qplot(age, circumference, data = Orange, geom = "point", colour = Tree)
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree)
qplot(age, circumference, data = Orange, geom = "line")
qplot(age, circumference, data = Orange, geom = "line", colour = Tree)
data(economics_long)
head(economics_long)
table(economics_long$variable)
qplot(date, value, data=economics_long, geom="point", group="variable")
qplot(date, value, data=economics_long, geom="line", group="variable") +
facet_grid(variable~.)
qplot(date, value, data=economics_long, geom="line", group="variable") +
facet_grid(variable~., scale="free_y")
?facet_grid
library(plotly)
install.packages("plotly")
library(plotly)
ggplotly()
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree)
ggplotly()
qplot(date, value, data=economics_long, geom="point", group="variable")
?ylim
?scale_y_continuous
??scale_y_continuous
# Load data
unemployment <- read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv", sep=",")
unemployment[1:10,]
# Plain scatter plot
plot(1:length(unemployment$Value), unemployment$Value)
# Fitted linear line
lines(c(1,746), c(4.889523,6.42593))
# Scatter plot with loess
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value)
# Fix y-axis to start at zero
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value, ylim=c(0,11), degree=2)
# Change color
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value, ylim=c(0,11), degree=2, col="#CCCCCC", span=0.5)
# Load data
hotdogs <- read.csv("E:\\学习相关\\School Works\\Data Viz\\Assignment\\3\\ch04\\data\\hot-dog-contest-winners.csv", sep=",", header=TRUE)
# Default barchart
barplot(hotdogs$Dogs.eaten)
# Year labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year)
# Axis labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Fill color and border
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col="red", border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight USA colors
fill_colors <- c()
for ( i in 1:length(hotdogs$Country) ) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight record years with color
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Spacing
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.3, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.5, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#3eb24d")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
# Load data
hotdogs <- read.csv("E:\\学习相关\\School Works\\Data Viz\\Assignment\\3\\ch04\\data\\hot-dog-contest-winners.csv", sep=",", header=TRUE)
# Default barchart
barplot(hotdogs$Dogs.eaten)
# Year labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year)
# Axis labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Fill color and border
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col="red", border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight USA colors
fill_colors <- c()
for ( i in 1:length(hotdogs$Country) ) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight record years with color
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#3eb24d")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Spacing
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.3, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.5, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
crime <- read.csv("http://datasets.flowingdata.com/crimeRatesByState-formatted.csv")
stars(crime)
View(crime)
row.names(crime) <- crime$state
crime <- crime[,2:7]
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5))
View(crime)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5), full=FALSE)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5), draw.segments=TRUE)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5))
d <- data.frame(y = rnorm(20, 9, 2),
group = as.factor(rep(c('Post-FAP', 'Post-DEP'), each = 10)),
id = rep(1:10, 2))
View(d)
load("~/Rplot.png")
setwd("E:\\学习相关\\R\\China-s-Internal-Migrants-and-Their-Lives\\Codes&Datasets\\Reason")
library(ggplot2)
library(ggplot2movies)
library(reshape2)
raw <- read.csv("reason-raw.csv")
melted <- melt(raw)
par(mfrow = c(8, 4))
for (i in c("Beijing",
"Tianjin",
"Hebei",
"Shanxi",
"Inner Mongolia",
"Liaoning",
"Jilin",
"Heilongjiang",
"Shanghai",
"Jiangsu",
"Zhejiang",
"Anhui",
"Fujian",
"Jiangxi",
"Shandong",
"Henan",
"Hubei",
"Hunan",
"Guangdong",
"Guangxi",
"Hainan",
"Chongqing",
"Sichuan",
"Guizhou",
"Yunan",
"Tibet",
"Shaanxi",
"Gansu",
"Qinghai",
"Ningxia",
"Xinjiang",
"National Average")){
temp <- subset(melted, melted$X==i)
ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")
}
plots <-list()
for (j in 1:33) {(i in c("Beijing",
"Tianjin",
"Hebei",
"Shanxi",
"Inner Mongolia",
"Liaoning",
"Jilin",
"Heilongjiang",
"Shanghai",
"Jiangsu",
"Zhejiang",
"Anhui",
"Fujian",
"Jiangxi",
"Shandong",
"Henan",
"Hubei",
"Hunan",
"Guangdong",
"Guangxi",
"Hainan",
"Chongqing",
"Sichuan",
"Guizhou",
"Yunan",
"Tibet",
"Shaanxi",
"Gansu",
"Qinghai",
"Ningxia",
"Xinjiang",
"National Average")){
temp <- subset(melted, melted$X==i)
p1 <- ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")
plots[[j]] <- p1
}}
raw <- read.csv("reason-raw.csv")
melted <- melt(raw)
View(melted)
?melt
melted <- melt(raw, id.vars=c("X", "X.1"))
View(melted)
raw <- raw[,c(1,3:9)]
melted <- melt(raw)
melted <- melt(raw, id.vars="X")
raw <- read.csv("reason-raw.csv")
melted <- melt(raw)
View(melted)
plots <-list()
for (i in c("Beijing",
"Tianjin",
"Hebei",
"Shanxi",
"Inner Mongolia",
"Liaoning",
"Jilin",
"Heilongjiang",
"Shanghai",
"Jiangsu",
"Zhejiang",
"Anhui",
"Fujian",
"Jiangxi",
"Shandong",
"Henan",
"Hubei",
"Hunan",
"Guangdong",
"Guangxi",
"Hainan",
"Chongqing",
"Sichuan",
"Guizhou",
"Yunan",
"Tibet",
"Shaanxi",
"Gansu",
"Qinghai",
"Ningxia",
"Xinjiang",
"National Average")){
temp <- subset(melted, melted$X==i)
p1 <- ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")
plots[[i]] <- p1
}
plots
multiplot(plotlist = plots, cols = 3)
install.packages("Rmisc")
library(Rmisc)
multiplot(plotlist = plots, cols = 4)
library(gridExtra)
do.call("grid.arrange", c(plots, ncol=4, nrow=8))
plots <-list()
for (i in c("Beijing",
"Tianjin",
"Hebei",
"Shanxi",
"Inner Mongolia",
"Liaoning",
"Jilin",
"Heilongjiang",
"Shanghai",
"Jiangsu",
"Zhejiang",
"Anhui",
"Fujian",
"Jiangxi",
"Shandong",
"Henan",
"Hubei",
"Hunan",
"Guangdong",
"Guangxi",
"Hainan",
"Chongqing",
"Sichuan",
"Guizhou",
"Yunan",
"Tibet",
"Shaanxi",
"Gansu",
"Qinghai",
"Ningxia",
"Xinjiang",
"National Average")){
temp <- subset(melted, melted$X==i)
p1 <- ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")+
theme(legend.position="none")+
scale_fill_manual(values=c("#b1fcf9","#2CF8EF","#07e2d8","#05968f","#035d59","#023734"))
plots[[i]] <- p1
}
do.call("grid.arrange", c(plots, ncol=4, nrow=8))
?theme
ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")+
theme(legend.position="none",panel.background = element_rect(fill = "white"),
panel.border= element_blank())+
scale_x_discrete(breaks=NULL)+
scale_fill_manual(values=c("#b1fcf9","#2CF8EF","#07e2d8","#05968f","#035d59","#023734"))
ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")+
theme(legend.position="none",panel.background = element_rect(fill = "white"),
panel.border= element_blank())+
scale_x_discrete(breaks=NULL)+
scale_x_continuous(breaks=NULL)+
scale_fill_manual(values=c("#b1fcf9","#2CF8EF","#07e2d8","#05968f","#035d59","#023734"))
ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")+
theme(legend.position="none",panel.background = element_rect(fill = "white"),
panel.border= element_blank())+
scale_x_discrete(breaks=NULL)+
scale_y_continuous(breaks=NULL)+
scale_fill_manual(values=c("#b1fcf9","#2CF8EF","#07e2d8","#05968f","#035d59","#023734"))
plots <-list()
for (i in c("Beijing",
"Tianjin",
"Hebei",
"Shanxi",
"Inner Mongolia",
"Liaoning",
"Jilin",
"Heilongjiang",
"Shanghai",
"Jiangsu",
"Zhejiang",
"Anhui",
"Fujian",
"Jiangxi",
"Shandong",
"Henan",
"Hubei",
"Hunan",
"Guangdong",
"Guangxi",
"Hainan",
"Chongqing",
"Sichuan",
"Guizhou",
"Yunan",
"Tibet",
"Shaanxi",
"Gansu",
"Qinghai",
"Ningxia",
"Xinjiang",
"National Average")){
temp <- subset(melted, melted$X==i)
p1 <- ggplot(temp, aes(x = X.1, y= value, fill = variable))+
geom_bar(stat="identity") + coord_polar(theta = "y")+
theme(legend.position="none",panel.background = element_rect(fill = "white"),
panel.border= element_blank())+
scale_x_discrete(breaks=NULL)+
scale_y_continuous(breaks=NULL)+
scale_fill_manual(values=c("#b1fcf9","#2CF8EF","#07e2d8","#05968f","#035d59","#023734"))
plots[[i]] <- p1
}
do.call("grid.arrange", c(plots, ncol=4, nrow=8))
View(raw)

file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink(testdir2, recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwk(old.dir)
setwd(old.dir)
unlink("testdir", recursive=T)
unlink("testdir", recursive = TRUE)
nxt()
nxt()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt<-dqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 100
c(1, 2, 3, 4) + c(0, 10, 1000)
z*2 + 1000
my_div
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect<-c(0.5,55,-10,6)
num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
my-name<-c(my_char, "Claire")
my_name<-c(my_char, "Claire")
my_name
past(my_name,collapse="")
paste(my_name,collapse="")
paste(my_name,collapse=" ")
Try paste("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(iris)
qplot(Sepal.Length, Petal.Length, data = iris)
?qplot
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species, size = Petal.Width)
qplot(Sepal.Length, Petal.Length, data = iris, geom = "line", color = Species)
data(Orange)
qplot(age, circumference, data = Orange, geom = "line", colour = Tree)
qplot(age, circumference, data = Orange, geom = "line")
qplot(age, circumference, data = Orange, geom = "point", colour = Tree)
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree)
qplot(age, circumference, data = Orange, geom = "line")
qplot(age, circumference, data = Orange, geom = "line", colour = Tree)
data(economics_long)
head(economics_long)
table(economics_long$variable)
qplot(date, value, data=economics_long, geom="point", group="variable")
qplot(date, value, data=economics_long, geom="line", group="variable") +
facet_grid(variable~.)
qplot(date, value, data=economics_long, geom="line", group="variable") +
facet_grid(variable~., scale="free_y")
?facet_grid
library(plotly)
install.packages("plotly")
library(plotly)
ggplotly()
qplot(age, circumference, data = Orange, geom = c("point", "line"), colour = Tree)
ggplotly()
qplot(date, value, data=economics_long, geom="point", group="variable")
?ylim
?scale_y_continuous
??scale_y_continuous
# Load data
unemployment <- read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv", sep=",")
unemployment[1:10,]
# Plain scatter plot
plot(1:length(unemployment$Value), unemployment$Value)
# Fitted linear line
lines(c(1,746), c(4.889523,6.42593))
# Scatter plot with loess
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value)
# Fix y-axis to start at zero
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value, ylim=c(0,11), degree=2)
# Change color
scatter.smooth(x=1:length(unemployment$Value), y=unemployment$Value, ylim=c(0,11), degree=2, col="#CCCCCC", span=0.5)
# Load data
hotdogs <- read.csv("E:\\学习相关\\School Works\\Data Viz\\Assignment\\3\\ch04\\data\\hot-dog-contest-winners.csv", sep=",", header=TRUE)
# Default barchart
barplot(hotdogs$Dogs.eaten)
# Year labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year)
# Axis labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Fill color and border
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col="red", border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight USA colors
fill_colors <- c()
for ( i in 1:length(hotdogs$Country) ) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight record years with color
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Spacing
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.3, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.5, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#3eb24d")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
# Load data
hotdogs <- read.csv("E:\\学习相关\\School Works\\Data Viz\\Assignment\\3\\ch04\\data\\hot-dog-contest-winners.csv", sep=",", header=TRUE)
# Default barchart
barplot(hotdogs$Dogs.eaten)
# Year labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year)
# Axis labels
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Fill color and border
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col="red", border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight USA colors
fill_colors <- c()
for ( i in 1:length(hotdogs$Country) ) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Highlight record years with color
fill_colors <- c()
for ( i in 1:length(hotdogs$New.record) ) {
if (hotdogs$New.record[i] == 1) {
fill_colors <- c(fill_colors, "#3eb24d")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Spacing
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.3, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.5, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
# Main title
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, space=0.25, xlab="Year", ylab="Hot dogs and buns (HDB) eaten", main="Nathan's Hot Dog Eating Contest Results, 1980-2010")
crime <- read.csv("http://datasets.flowingdata.com/crimeRatesByState-formatted.csv")
stars(crime)
View(crime)
row.names(crime) <- crime$state
crime <- crime[,2:7]
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5))
View(crime)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5), full=FALSE)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5), draw.segments=TRUE)
stars(crime, flip.labels=FALSE, key.loc = c(15, 1.5))
d <- data.frame(y = rnorm(20, 9, 2),
group = as.factor(rep(c('Post-FAP', 'Post-DEP'), each = 10)),
id = rep(1:10, 2))
View(d)
load("~/Rplot.png")
setwd("E:\\学习相关\\R\\China-s-Internal-Migrants-and-Their-Lives\\Codes&Datasets")
read.csv("total population.csv")
data <- read.csv("total population.csv")
View(data)
melt(data)
library(ggplot
library(ggplot2)
library(ggplot2)
melt(data)
library(ggplot2)
library(reshape2)
melt_data <- melt(data)
View(melt_data)
data$difference <- NULL
melt_data <- melt(data)
View(melt_data)
?melt
View(melt_data)
ggplot(melt_data, aes(value = value)) +
geom_point(aes(x = rep(c(-1, 1), each = 10)), size = 5) +
geom_line(aes(x = rep(c(-1, 1), each = 10), group = variable))
?geom_point
ggplot(melt_data, aes(value = value))
?geom_point
ggplot(melt_data[melt_data$variable!="percentage.change"], aes(value = value)) +
geom_point(aes(x = melt_data$value, size = 5)
ggplot(melt_data[melt_data$variable!="percentage.change"], aes(value = value)) +
geom_point(aes(x = melt_data$value, size = 5)
ggplot(melt_data[melt_data$variable!="percentage.change"], aes(value = value)) +
geom_point(aes(x = melt_data$value, size = 5)
geom_point(aes(x = melt_data$value, size = 5)
ggplot(melt_data[melt_data$variable!="percentage.change"], aes(value = value)) +
geom_point(aes(x = melt_data$value, size = 5))
data$percentage.change <- NULL
melt_data <- melt(data)
ggplot(melt_data, aes(value = value)) +
geom_point(aes(x = melt_data$value, size = 5))
?geom_point
d <- data.frame(y = rnorm(20, 9, 2),
group = as.factor(rep(c('Post-FAP', 'Post-DEP'), each = 10)),
id = rep(1:10, 2))
ggplot(d, aes(y = y)) +
geom_point(aes(x = rep(c(-1, 1), each = 10)), size = 5) +
geom_line(aes(x = rep(c(-1, 1), each = 10), group = id))
ggplot(d, aes(y = y)) +
geom_point(aes(x = rep(c(-1, 1), each = 10)), size = 5)
View(d)
ggplot(melt_data, aes(value = value)) +
geom_point(aes(x = rep(c(-1,1)), size = 5))
View(d)
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1)), size = 5))
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1), each=31), size = 5))
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-64,64), each=31), size = 5))
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1), each=32), size = 5))
mydata <- read.csv("total population.csv")
mydata <- subset(data, data$)
mydata$difference <- NULL
mydata$percentage.change <- NULL
View(d)
View(mydata)
mydata <- subset(mydata, mydata$X.1!="National Average")
View(mydata)
melt_data <- melt(mydata)
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1), each=32), size = 5))
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1), each=31), size = 5))
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1), each=31), size = 5)) +
geom_line(aes(x = rep(c(-1, 1), each = 31), group = variable))
ggplot(d, aes(y = y)) +
geom_point(aes(x = rep(c(-1, 1), each = 10)), size = 5) +
geom_line(aes(x = rep(c(-1, 1), each = 10), group = id))
ggplot(melt_data, aes(y = value)) +
geom_point(aes(x = rep(c(-1,1), each=31), size = 5)) +
geom_line(aes(x = rep(c(-1, 1), each = 31), group = X.1))
ggplot(melt_data, aes(x = value, y = X.1))
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5))
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5)
positions <- c("Guangdong","Zhejiang","Jiangsu","Shanghai","Beijing","Fujian","Shandong",
"Sichuan","Liaoning","Hubei","Henan","Inner Mongolia","Hebei","Tianjin",
"Yunan","Guangxi","Hunan","Anhui","Shaanxi","Shanxi","Xinjiang","Chongqing",
"Heilongjiang","Guizhou","Jiangxi",
"Jilin","Gansu","Hainan","Ningxia","Qinghai","Tibet")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = -positions)
?scale_y_discrete
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_reverse(limits = positions)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing","Xinjiang",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Tianjin","Hebei","Inner Mongolia","Henan","Hubei","Liaoning","Sichuan",
"Shandong","Fujian","Beijing","Shanghai","Jiangsu","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_line(group = X.1)
View(melt_data)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_line(group = melt_data$X.1)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_line(melt_data, aes(x=value),group = melt_data$X.1)
?geom_line
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
setwd("E:\\学习相关\\R\\China-s-Internal-Migrants-and-Their-Lives\\Codes&Datasets")
library(ggplot2)
library(reshape2)
mydata <- read.csv("total population.csv")
mydata <- subset(mydata, mydata$X.1!="National Average")
mydata$difference <- NULL
mydata$percentage.change <- NULL
melt_data <- melt(mydata)
View(melt_data)
mydata <- read.csv("total population.csv")
View(mydata)
mydata$X2000 <- NULL
mydata$X2010  <- NULL
?merge
melt_data <- merge(melt_data, mydata, by = "X")
View(melt_data)
View(melt_data)
mydata <- read.csv("total population.csv")
mydata$X2000 <- NULL
mydata$X2010  <- NULL
mydata$Region <- NULL
mydata$X.1 <- NUL
mydata$X.1 <- NULL
melt_data <- merge(melt_data, mydata, by = "X")
mydata <- read.csv("total population.csv")
mydata <- subset(mydata, mydata$X.1!="National Average")
mydata$difference <- NULL
mydata$percentage.change <- NULL
melt_data <- melt(mydata)
mydata <- read.csv("total population.csv")
mydata$X2000 <- NULL
mydata$X2010  <- NULL
mydata$Region <- NULL
mydata$X.1 <- NULL
melt_data <- merge(melt_data, mydata, by = "X")
View(melt_data)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing","Xinjiang",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Tianjin","Hebei","Inner Mongolia","Henan","Hubei","Liaoning","Sichuan",
"Shandong","Fujian","Beijing","Shanghai","Jiangsu","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Hebei","Inner Mongolia","Henan","Hubei","Liaoning","Xinjiang","Sichuan","Shandong",
"Tianjin","Fujian","Beijing","Jiangsu","Shanghai","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Hebei","Inner Mongolia","Henan","Hubei","Sichuan","Liaoning","Xinjiang","Shandong",
"Tianjin","Fujian","Beijing","Jiangsu","Shanghai","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Hebei","Inner Mongolia","Henan","Hubei","Sichuan","Liaoning","Xinjiang","Shandong",
"Tianjin","Fujian","Beijing","Jiangsu","Shanghai","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Hebei","Henan","Hubei","Sichuan","Inner Mongolia","Liaoning","Xinjiang","Shandong",
"Tianjin","Fujian","Beijing","Jiangsu","Shanghai","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
positions <- c("Tibet","Qinghai","Ningxia","Hainan","Gansu","Jilin","Chongqing",
"Jiangxi","Guizhou","Heilongjiang","Shanxi","Shaanxi","Anhui","Hunan","Guangxi",
"Yunan","Henan","Hubei","Sichuan","Hebei","Inner Mongolia","Liaoning","Xinjiang","Shandong",
"Tianjin","Fujian","Beijing","Jiangsu","Shanghai","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
positions <- c("Tibet","Qinghai","Ningxia","Gansu","Jilin",
"Heilongjiang","Hainan","Henan","Jiangxi","Anhui",
"Hunan","Guizhou","Guangxi",
"Shanxi","Chongqing","Shaanxi","Hubei","Sichuan","Yunan",
"Hebei","Inner Mongolia","Liaoning","Xinjiang","Shandong",
"Tianjin","Fujian","Beijing","Jiangsu","Shanghai","Zhejiang","Guangdong")
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 5) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
View(melt_data)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1, color=variable) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1, color=melt_data$variable) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1, color=melt_data$variable) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1, color=melt_data$variable) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(aes(color=melt_data$variable),size = 2, shape=1) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1, color= )
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(aes(color=variable),size = 2, shape=1) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1, color= )
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1, aes(color=percentage.change) )
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 2, shape=1) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1, size=3,aes(color=percentage.change) )
ggplot(melt_data, aes(x = value, y = X.1))+
geom_point(size = 3, shape=18) +
scale_y_discrete(limits = positions)+
geom_path(group = melt_data$X.1, size=3,aes(color=percentage.change) )
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=3,aes(color=percentage.change) )+
geom_point(size = 3, shape=18) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 3, shape=18) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 5, shape=18) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 5, shape=0) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 3, shape=0) +
scale_y_discrete(limits = positions)
gplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 3, shape=.) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 3, shape=.) +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
geom_point(size = 3, shape=".") +
scale_y_discrete(limits = positions)
ggplot(melt_data, aes(x = value, y = X.1))+
geom_path(group = melt_data$X.1, size=2,aes(color=percentage.change) )+
scale_y_discrete(limits = positions)
